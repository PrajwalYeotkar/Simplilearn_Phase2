{"ast":null,"code":"var _jsxFileName = \"D:\\\\SimpliLearn Assessment Phase2\\\\Phase2\\\\src\\\\components\\\\AddEditEvent.js\";\nimport React, { Component } from 'react';\nimport { Consumer } from '../context';\nimport TextInputGroup from './TextInputGroup';\nimport axios from 'axios';\nimport { Card, Form, Button } from 'react-bootstrap';\nexport default class AddEditEvent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: '',\n      title: '',\n      body: '',\n      userId: '',\n      errors: []\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n      const {\n        title,\n        body,\n        userId\n      } = this.state;\n      let valid = true;\n      let errors = [];\n\n      if (!title) {\n        errors.title = 'Title is required.';\n        valid = false;\n      }\n\n      if (!body) {\n        errors.body = 'Details are required.';\n        valid = false;\n      }\n\n      if (!userId) {\n        errors.userId = 'User ID is required.';\n        valid = false;\n      }\n\n      this.setState({\n        errors: errors\n      });\n\n      if (!valid) {\n        return;\n      }\n\n      const theEvent = {\n        title,\n        body,\n        userId\n      };\n      const {\n        id\n      } = this.props.match.params;\n\n      if (id) {\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, theEvent);\n        dispatch({\n          type: 'UPDATE_EVENT',\n          payload: res.data\n        });\n      } else {\n        const res = await axios.post('https://jsonplaceholder.typicode.com/posts', theEvent);\n        dispatch({\n          type: 'ADD_EVENT',\n          payload: res.data\n        });\n      } // Clear state\n\n\n      this.setState({\n        title: '',\n        body: '',\n        userId: '',\n        errors: {}\n      });\n      this.props.history.push('/');\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n\n    if (id) {\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\n      const event = res.data;\n      this.setState({\n        id: event.id,\n        title: event.title,\n        body: event.body,\n        userId: event.userId\n      });\n    }\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      body,\n      userId,\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, value => {\n      const {\n        dispatch\n      } = value;\n      let header = 'Add Event';\n      let submitLabel = 'Add Event';\n\n      if (id) {\n        header = 'Edit Event';\n        submitLabel = 'Update Event';\n      }\n\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, header)), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onSubmit.bind(this, dispatch),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TextInputGroup, {\n        label: \"Title\",\n        name: \"title\",\n        placeholder: \"Enter event title\",\n        value: title,\n        onChange: this.onChange,\n        error: errors.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(TextInputGroup, {\n        label: \"Details\",\n        name: \"body\",\n        placeholder: \"Enter event details\",\n        value: body,\n        onChange: this.onChange,\n        error: errors.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(TextInputGroup, {\n        label: \"User ID\",\n        type: \"number\",\n        name: \"userId\",\n        placeholder: \"Enter user ID\",\n        value: userId,\n        onChange: this.onChange,\n        error: errors.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"btn-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }\n      }, submitLabel))));\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/SimpliLearn Assessment Phase2/Phase2/src/components/AddEditEvent.js"],"names":["React","Component","Consumer","TextInputGroup","axios","Card","Form","Button","AddEditEvent","state","id","title","body","userId","errors","onChange","e","setState","target","name","value","onSubmit","dispatch","preventDefault","valid","theEvent","props","match","params","res","put","type","payload","data","post","history","push","componentDidMount","get","event","render","header","submitLabel","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Consumer } from '../context';\nimport TextInputGroup from './TextInputGroup';\nimport axios from 'axios';\nimport { Card, Form, Button } from 'react-bootstrap';\n\nexport default class AddEditEvent extends Component {\n\n    state = {\n        id: '',\n        title: '',\n        body: '',\n        userId: '',\n        errors: []\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n\n        if( id ) {\n            const res = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\n\n            const event = res.data;\n\n            this.setState({\n                id: event.id,\n                title: event.title,\n                body: event.body,\n                userId: event.userId\n            });\n        }\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        \n        const { title, body, userId} = this.state;\n\n        let valid = true;\n        let errors = [];\n\n        if( !title ) {\n            errors.title =  'Title is required.';\n            valid = false;\n        }\n\n        if( !body ) {\n            errors.body =  'Details are required.';\n            valid = false;\n        }\n\n        if( !userId ) {\n            errors.userId =  'User ID is required.';\n            valid = false;\n        }\n\n        this.setState({ errors: errors });\n\n        if( !valid ) {\n            return;\n        }\n\n        const theEvent = {\n            title,\n            body,\n            userId\n        }\n\n        const { id } = this.props.match.params;\n\n        if(id) {\n            const res = await axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, theEvent);\n        \n            dispatch({\n                type: 'UPDATE_EVENT',\n                payload: res.data\n            });\n        } else {\n            const res = await axios.post('https://jsonplaceholder.typicode.com/posts', theEvent);\n\n            dispatch({\n                type: 'ADD_EVENT',\n                payload: res.data\n            });\n        }\n\n        // Clear state\n        this.setState({\n            title: '',\n            body: '',\n            userId: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { id, title, body, userId, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                  const {dispatch} = value;\n                  let header = 'Add Event';\n                  let submitLabel = 'Add Event';\n\n                  if(id) {\n                    header = 'Edit Event';\n                    submitLabel = 'Update Event';\n                  }\n\n                  return (\n                    <Card className=\"mb-3\">\n                        <Card.Header>\n                            <h5>{header}</h5>\n                        </Card.Header>\n                        <Card.Body>\n        \n                            <Form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                                <TextInputGroup\n                                    label=\"Title\"\n                                    name=\"title\"\n                                    placeholder=\"Enter event title\"\n                                    value={title}\n                                    onChange={this.onChange}\n                                    error={errors.title}\n                                />\n\n                                <TextInputGroup\n                                    label=\"Details\"\n                                    name=\"body\"\n                                    placeholder=\"Enter event details\"\n                                    value={body}\n                                    onChange={this.onChange}\n                                    error={errors.body}\n                                />\n        \n                                <TextInputGroup\n                                    label=\"User ID\"\n                                    type=\"number\"\n                                    name=\"userId\"\n                                    placeholder=\"Enter user ID\"\n                                    value={userId}\n                                    onChange={this.onChange}\n                                    error={errors.userId}\n                                />\n\n                                <Button variant=\"primary\" type=\"submit\" className=\"btn-block\">\n                                    {submitLabel}\n                                </Button>\n                            </Form>\n        \n                        </Card.Body>\n                    </Card>\n                  )\n                }}\n            </Consumer>\n        )\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}