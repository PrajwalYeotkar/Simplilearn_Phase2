{"ast":null,"code":"var _jsxFileName = \"D:\\\\SimpliLearn Assessment Phase2\\\\Phase2\\\\src\\\\components\\\\TextInputGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, label), /*#__PURE__*/React.createElement(Form.Control, {\n    type: type,\n    name: name,\n    placeholder: placeholder,\n    value: value,\n    onChange: onChange,\n    className: classnames('', {\n      'is-invalid': error\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, error));\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.node.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextInputGroup;","map":{"version":3,"sources":["D:/SimpliLearn Assessment Phase2/Phase2/src/components/TextInputGroup.js"],"names":["React","PropTypes","Form","classnames","TextInputGroup","label","name","value","placeholder","type","onChange","error","propTypes","string","isRequired","node","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACpBC,EAAAA,KADoB;AAEpBC,EAAAA,IAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,WAJoB;AAKpBC,EAAAA,IALoB;AAMpBC,EAAAA,QANoB;AAOpBC,EAAAA;AAPoB,CAAD,KAQjB;AACF,sBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEL,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,KAAb,CADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAEI,IADV;AAEI,IAAA,IAAI,EAAEH,IAFV;AAGI,IAAA,WAAW,EAAEE,WAHjB;AAII,IAAA,KAAK,EAAED,KAJX;AAKI,IAAA,QAAQ,EAAEG,QALd;AAMI,IAAA,SAAS,EAAEP,UAAU,CAAC,EAAD,EAAK;AAAC,oBAAaQ;AAAd,KAAL,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUKA,KAAK,iBAAE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAVZ,CADJ;AAcH,CAvBD;;AAyBAP,cAAc,CAACQ,SAAf,GAA2B;AACvBP,EAAAA,KAAK,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UADD;AAEvBR,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBC,UAFA;AAGvBP,EAAAA,KAAK,EAAEN,SAAS,CAACc,IAAV,CAAeD,UAHC;AAIvBN,EAAAA,WAAW,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAJP;AAKvBL,EAAAA,IAAI,EAAER,SAAS,CAACY,MAAV,CAAiBC,UALA;AAMvBJ,EAAAA,QAAQ,EAAET,SAAS,CAACe,IAAV,CAAeF,UANF;AAOvBH,EAAAA,KAAK,EAAEV,SAAS,CAACY;AAPM,CAA3B;AAUAT,cAAc,CAACa,YAAf,GAA8B;AAC1BR,EAAAA,IAAI,EAAE;AADoB,CAA9B;AAIA,eAAeL,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <Form.Group controlId={name}>\n            <Form.Label>{label}</Form.Label>\n            <Form.Control\n                type={type}\n                name={name}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n                className={classnames('', {'is-invalid':error})}\n            />\n            {error&&<div className=\"invalid-feedback\">{error}</div>}\n        </Form.Group>\n    )\n}\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.node.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;\n"]},"metadata":{},"sourceType":"module"}